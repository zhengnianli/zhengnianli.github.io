<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>正念的博客</title>
  
  <subtitle>嵌入式大杂烩</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zhengnianli.github.io/"/>
  <updated>2019-10-13T06:37:35.554Z</updated>
  <id>https://zhengnianli.github.io/</id>
  
  <author>
    <name>ZhengNian</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用STM32内部Flash额外的空间来存储数据</title>
    <link href="https://zhengnianli.github.io/2019/10/13/shi-yong-stm32-nei-bu-flash-e-wai-de-kong-jian-lai-cun-chu-shu-ju/"/>
    <id>https://zhengnianli.github.io/2019/10/13/shi-yong-stm32-nei-bu-flash-e-wai-de-kong-jian-lai-cun-chu-shu-ju/</id>
    <published>2019-10-13T00:22:15.000Z</published>
    <updated>2019-10-13T06:37:35.554Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;大家周末愉快！本次分享关于STM32内部FLASH的笔记。&lt;/p&gt;
&lt;p&gt;STM32 芯片内部的 FLASH
        
      
    
    </summary>
    
      <category term="嵌入式" scheme="https://zhengnianli.github.io/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
      <category term="STM32" scheme="https://zhengnianli.github.io/tags/STM32/"/>
    
      <category term="内部FLASH" scheme="https://zhengnianli.github.io/tags/%E5%86%85%E9%83%A8FLASH/"/>
    
  </entry>
  
  <entry>
    <title>sizeof你真的弄明白了吗？来看看这个例子</title>
    <link href="https://zhengnianli.github.io/2019/10/09/sizeof-ni-zhen-de-nong-ming-bai-liao-ma-lai-kan-kan-zhe-ge-li-zi/"/>
    <id>https://zhengnianli.github.io/2019/10/09/sizeof-ni-zhen-de-nong-ming-bai-liao-ma-lai-kan-kan-zhe-ge-li-zi/</id>
    <published>2019-10-09T00:22:15.000Z</published>
    <updated>2019-10-12T00:33:12.418Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;sizeof基础&quot;&gt;&lt;a href=&quot;#sizeof基础&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="C语言笔记" scheme="https://zhengnianli.github.io/categories/C%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="C语言" scheme="https://zhengnianli.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>两块STM32之间的SPI主从通讯实例</title>
    <link href="https://zhengnianli.github.io/2019/10/08/liang-kuai-stm32-zhi-jian-de-spi-zhu-cong-tong-xin-shi-li-fu-dai-ma-gong-cheng/"/>
    <id>https://zhengnianli.github.io/2019/10/08/liang-kuai-stm32-zhi-jian-de-spi-zhu-cong-tong-xin-shi-li-fu-dai-ma-gong-cheng/</id>
    <published>2019-10-08T00:22:15.000Z</published>
    <updated>2019-10-08T14:10:55.410Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;之前分享过的SPI通讯实例：&lt;a
        
      
    
    </summary>
    
      <category term="嵌入式" scheme="https://zhengnianli.github.io/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
      <category term="STM32" scheme="https://zhengnianli.github.io/tags/STM32/"/>
    
      <category term="SPI通讯" scheme="https://zhengnianli.github.io/tags/SPI%E9%80%9A%E8%AE%AF/"/>
    
  </entry>
  
  <entry>
    <title>常见的几种AD滤波算法</title>
    <link href="https://zhengnianli.github.io/2019/10/07/chang-jian-de-ji-chong-ad-lu-bo-suan-fa/"/>
    <id>https://zhengnianli.github.io/2019/10/07/chang-jian-de-ji-chong-ad-lu-bo-suan-fa/</id>
    <published>2019-10-07T00:22:15.000Z</published>
    <updated>2019-10-07T02:59:32.104Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在进行AD采样时，常常都会对采样数据进行滤波，以达到更好一点的效果。下面分享几种较简单而常用的滤波算法：&lt;/p&gt;
&lt;h3 id=&quot;限幅滤波法&quot;&gt;&lt;a href=&quot;#限幅滤波法&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="C语言笔记" scheme="https://zhengnianli.github.io/categories/C%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="C语言" scheme="https://zhengnianli.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="滤波算法" scheme="https://zhengnianli.github.io/tags/%E6%BB%A4%E6%B3%A2%E7%AE%97%E6%B3%95/"/>
    
      <category term="AD" scheme="https://zhengnianli.github.io/tags/AD/"/>
    
  </entry>
  
  <entry>
    <title>一道简单但易错的C语言面试题</title>
    <link href="https://zhengnianli.github.io/2019/09/30/yi-dao-jian-dan-dan-yi-cuo-de-c-yu-yan-mian-shi-ti/"/>
    <id>https://zhengnianli.github.io/2019/09/30/yi-dao-jian-dan-dan-yi-cuo-de-c-yu-yan-mian-shi-ti/</id>
    <published>2019-09-30T00:22:15.000Z</published>
    <updated>2019-10-12T00:39:16.396Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;题目：分析以下代码，它的运行结果是？&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot; language-c&quot;&gt;&lt;code class=&quot;language-c&quot;&gt;&lt;span class=&quot;token macro property&quot;&gt;#&lt;span
        
      
    
    </summary>
    
      <category term="C语言笔记" scheme="https://zhengnianli.github.io/categories/C%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="C语言" scheme="https://zhengnianli.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>STM32的复用时钟何时开启呢？</title>
    <link href="https://zhengnianli.github.io/2019/09/26/stm32-de-fu-yong-shi-zhong-he-shi-kai-qi-ni/"/>
    <id>https://zhengnianli.github.io/2019/09/26/stm32-de-fu-yong-shi-zhong-he-shi-kai-qi-ni/</id>
    <published>2019-09-26T00:22:15.000Z</published>
    <updated>2019-09-27T00:33:36.473Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;STM32的AFIO时钟真的是在开启引脚复用功能的时候开启吗？其实并不是~&lt;/p&gt;
&lt;h3 id=&quot;什么是复用？&quot;&gt;&lt;a href=&quot;#什么是复用？&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="嵌入式" scheme="https://zhengnianli.github.io/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
      <category term="STM32" scheme="https://zhengnianli.github.io/tags/STM32/"/>
    
      <category term="复用" scheme="https://zhengnianli.github.io/tags/%E5%A4%8D%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>把notepad++配置成一个能编译C代码的记事本</title>
    <link href="https://zhengnianli.github.io/2019/09/20/ba-notepad-pei-zhi-cheng-yi-ge-neng-bian-yi-c-dai-ma-de-ji-shi-ben/"/>
    <id>https://zhengnianli.github.io/2019/09/20/ba-notepad-pei-zhi-cheng-yi-ge-neng-bian-yi-c-dai-ma-de-ji-shi-ben/</id>
    <published>2019-09-20T00:22:15.000Z</published>
    <updated>2019-09-22T04:57:53.265Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="工具" scheme="https://zhengnianli.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="gcc" scheme="https://zhengnianli.github.io/tags/gcc/"/>
    
      <category term="MinGW" scheme="https://zhengnianli.github.io/tags/MinGW/"/>
    
  </entry>
  
  <entry>
    <title>STM32的ISP下载得原理是什么？</title>
    <link href="https://zhengnianli.github.io/2019/09/17/stm32-de-isp-xia-zai-de-yuan-li-shi-shi-me/"/>
    <id>https://zhengnianli.github.io/2019/09/17/stm32-de-isp-xia-zai-de-yuan-li-shi-shi-me/</id>
    <published>2019-09-17T00:22:15.000Z</published>
    <updated>2019-09-18T00:30:52.634Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;上一篇笔记分享了STM32的串口IAP实例：&lt;a
        
      
    
    </summary>
    
      <category term="嵌入式" scheme="https://zhengnianli.github.io/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
      <category term="STM32" scheme="https://zhengnianli.github.io/tags/STM32/"/>
    
      <category term="IAP" scheme="https://zhengnianli.github.io/tags/IAP/"/>
    
      <category term="ISP" scheme="https://zhengnianli.github.io/tags/ISP/"/>
    
      <category term="BootLoader" scheme="https://zhengnianli.github.io/tags/BootLoader/"/>
    
  </entry>
  
  <entry>
    <title>STM32串口IAP分享</title>
    <link href="https://zhengnianli.github.io/2019/09/16/stm32-chuan-kou-iap-fen-xiang/"/>
    <id>https://zhengnianli.github.io/2019/09/16/stm32-chuan-kou-iap-fen-xiang/</id>
    <published>2019-09-16T00:22:15.000Z</published>
    <updated>2019-09-21T09:42:56.850Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;什么是IAP？&quot;&gt;&lt;a href=&quot;#什么是IAP？&quot; class=&quot;headerlink&quot; title=&quot;什么是IAP？&quot;&gt;&lt;/a&gt;什么是IAP？&lt;/h3&gt;&lt;p&gt;&lt;code&gt;IAP&lt;/code&gt;是&lt;code&gt;In Application
        
      
    
    </summary>
    
      <category term="嵌入式" scheme="https://zhengnianli.github.io/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
      <category term="STM32" scheme="https://zhengnianli.github.io/tags/STM32/"/>
    
      <category term="IAP" scheme="https://zhengnianli.github.io/tags/IAP/"/>
    
  </entry>
  
  <entry>
    <title>易错、经典问题：return不可返回指向栈内存的指针</title>
    <link href="https://zhengnianli.github.io/2019/09/06/yi-cuo-jing-dian-wen-ti-return-bu-ke-fan-hui-zhi-xiang-zhan-nei-cun-de-zhi-zhen/"/>
    <id>https://zhengnianli.github.io/2019/09/06/yi-cuo-jing-dian-wen-ti-return-bu-ke-fan-hui-zhi-xiang-zhan-nei-cun-de-zhi-zhen/</id>
    <published>2019-09-06T00:22:15.000Z</published>
    <updated>2019-09-08T10:45:03.094Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;预备知识：内存的分类&quot;&gt;&lt;a href=&quot;#预备知识：内存的分类&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="C语言笔记" scheme="https://zhengnianli.github.io/categories/C%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="return" scheme="https://zhengnianli.github.io/tags/return/"/>
    
      <category term="栈指针" scheme="https://zhengnianli.github.io/tags/%E6%A0%88%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>【RT-Thread笔记】内核对象模型</title>
    <link href="https://zhengnianli.github.io/2019/09/01/rt-thread-bi-ji-nei-he-dui-xiang-mo-xing/"/>
    <id>https://zhengnianli.github.io/2019/09/01/rt-thread-bi-ji-nei-he-dui-xiang-mo-xing/</id>
    <published>2019-09-01T00:22:15.000Z</published>
    <updated>2019-09-18T00:34:51.472Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;RT-Thread中的对象有哪些？&quot;&gt;&lt;a href=&quot;#RT-Thread中的对象有哪些？&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="嵌入式" scheme="https://zhengnianli.github.io/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
      <category term="RT-Thread" scheme="https://zhengnianli.github.io/tags/RT-Thread/"/>
    
      <category term="内核对象模型" scheme="https://zhengnianli.github.io/tags/%E5%86%85%E6%A0%B8%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>【RT-Thread笔记】内核基础</title>
    <link href="https://zhengnianli.github.io/2019/08/30/rt-thread-bi-ji-nei-he-ji-chu/"/>
    <id>https://zhengnianli.github.io/2019/08/30/rt-thread-bi-ji-nei-he-ji-chu/</id>
    <published>2019-08-30T00:22:15.000Z</published>
    <updated>2019-09-18T00:34:59.574Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;最近在工作中有用到多任务系统，趁热进行学习一下。这里我选择国产实时操作系统&lt;code&gt;RT-Thread&lt;/code&gt;进行学习，因为现在很火呀。之前已经有简单地过了一遍&lt;code&gt;RT-Thread&lt;/code&gt;，奈何学过地知识一旦不用，就会很容易地忘掉，所以应当多做一些学
        
      
    
    </summary>
    
      <category term="嵌入式" scheme="https://zhengnianli.github.io/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
      <category term="RT-Thread" scheme="https://zhengnianli.github.io/tags/RT-Thread/"/>
    
      <category term="内核" scheme="https://zhengnianli.github.io/tags/%E5%86%85%E6%A0%B8/"/>
    
  </entry>
  
  <entry>
    <title>C语言代码优化的一些经验及小技巧（四）</title>
    <link href="https://zhengnianli.github.io/2019/08/30/c-yu-yan-dai-ma-you-hua-de-yi-xie-ji-qiao-si/"/>
    <id>https://zhengnianli.github.io/2019/08/30/c-yu-yan-dai-ma-you-hua-de-yi-xie-ji-qiao-si/</id>
    <published>2019-08-30T00:22:15.000Z</published>
    <updated>2019-10-12T00:41:55.724Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;无限循环优先选用for-，而不是while-1&quot;&gt;&lt;a href=&quot;#无限循环优先选用for-，而不是while-1&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="C语言笔记" scheme="https://zhengnianli.github.io/categories/C%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="代码优化" scheme="https://zhengnianli.github.io/tags/%E4%BB%A3%E7%A0%81%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>C语言代码优化的一些经验及小技巧（三）</title>
    <link href="https://zhengnianli.github.io/2019/08/29/c-yu-yan-dai-ma-you-hua-de-yi-xie-ji-qiao-san/"/>
    <id>https://zhengnianli.github.io/2019/08/29/c-yu-yan-dai-ma-you-hua-de-yi-xie-ji-qiao-san/</id>
    <published>2019-08-29T00:22:15.000Z</published>
    <updated>2019-10-12T00:39:26.175Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;循环展开&quot;&gt;&lt;a href=&quot;#循环展开&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="C语言笔记" scheme="https://zhengnianli.github.io/categories/C%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="代码优化" scheme="https://zhengnianli.github.io/tags/%E4%BB%A3%E7%A0%81%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>程序的组成、存储与运行</title>
    <link href="https://zhengnianli.github.io/2019/08/28/cheng-xu-de-zu-cheng-cun-chu-yu-yun-xing/"/>
    <id>https://zhengnianli.github.io/2019/08/28/cheng-xu-de-zu-cheng-cun-chu-yu-yun-xing/</id>
    <published>2019-08-28T00:22:15.000Z</published>
    <updated>2019-08-28T14:30:33.343Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;一般 MCU 包含的存储空间有：片内 Flash 与片内 RAM， RAM 相当于内存， Flash 相当于硬盘。编译器会将一个程序分类为好几个部分，分别存储在 MCU 不同的存储区。&lt;/p&gt;
&lt;h2 id=&quot;一、编译过程&quot;&gt;&lt;a href=&quot;#一、编译过程&quot;
        
      
    
    </summary>
    
      <category term="嵌入式" scheme="https://zhengnianli.github.io/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
      <category term="嵌入式" scheme="https://zhengnianli.github.io/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
      <category term="STM32" scheme="https://zhengnianli.github.io/tags/STM32/"/>
    
  </entry>
  
  <entry>
    <title>C语言代码优化的一些经验及小技巧（二）</title>
    <link href="https://zhengnianli.github.io/2019/08/28/c-yu-yan-dai-ma-you-hua-de-yi-xie-ji-qiao-er/"/>
    <id>https://zhengnianli.github.io/2019/08/28/c-yu-yan-dai-ma-you-hua-de-yi-xie-ji-qiao-er/</id>
    <published>2019-08-28T00:22:15.000Z</published>
    <updated>2019-10-12T00:39:36.557Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;函数相关&quot;&gt;&lt;a href=&quot;#函数相关&quot; class=&quot;headerlink&quot; title=&quot;函数相关&quot;&gt;&lt;/a&gt;函数相关&lt;/h2&gt;&lt;h3 id=&quot;1、参数的书写要完整&quot;&gt;&lt;a href=&quot;#1、参数的书写要完整&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="C语言笔记" scheme="https://zhengnianli.github.io/categories/C%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="代码优化" scheme="https://zhengnianli.github.io/tags/%E4%BB%A3%E7%A0%81%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>C语言代码优化的一些经验及小技巧（一）</title>
    <link href="https://zhengnianli.github.io/2019/08/27/c-yu-yan-dai-ma-you-hua-de-yi-xie-ji-qiao-yi/"/>
    <id>https://zhengnianli.github.io/2019/08/27/c-yu-yan-dai-ma-you-hua-de-yi-xie-ji-qiao-yi/</id>
    <published>2019-08-27T00:22:15.000Z</published>
    <updated>2019-10-12T00:35:45.204Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;一、变量与值得比较&quot;&gt;&lt;a href=&quot;#一、变量与值得比较&quot; class=&quot;headerlink&quot; title=&quot;一、变量与值得比较&quot;&gt;&lt;/a&gt;一、变量与值得比较&lt;/h2&gt;&lt;h3 id=&quot;1、布尔变量与零值的比较&quot;&gt;&lt;a
        
      
    
    </summary>
    
      <category term="C语言笔记" scheme="https://zhengnianli.github.io/categories/C%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="代码优化" scheme="https://zhengnianli.github.io/tags/%E4%BB%A3%E7%A0%81%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>什么是通讯？</title>
    <link href="https://zhengnianli.github.io/2019/08/23/shi-me-shi-tong-xun/"/>
    <id>https://zhengnianli.github.io/2019/08/23/shi-me-shi-tong-xun/</id>
    <published>2019-08-23T00:22:15.000Z</published>
    <updated>2019-08-28T14:42:40.692Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;一、什么是串行通讯与并行通讯？&quot;&gt;&lt;a href=&quot;#一、什么是串行通讯与并行通讯？&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="嵌入式" scheme="https://zhengnianli.github.io/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
      <category term="通讯" scheme="https://zhengnianli.github.io/tags/%E9%80%9A%E8%AE%AF/"/>
    
  </entry>
  
  <entry>
    <title>【C语言笔记】goto语句</title>
    <link href="https://zhengnianli.github.io/2019/08/22/c-yu-yan-bi-ji-goto-yu-ju/"/>
    <id>https://zhengnianli.github.io/2019/08/22/c-yu-yan-bi-ji-goto-yu-ju/</id>
    <published>2019-08-22T00:22:15.000Z</published>
    <updated>2019-08-25T03:18:07.556Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;关于C语言的goto语句存在很多争议，很多书籍都建议“谨慎使用，或者根本不用”。这里先不做过多的讨论，存在即合理，既然是C语言中的一个知识点，我们还是有必要学会使用。先看一些goto如何用：&lt;/p&gt;
&lt;h2 id=&quot;一、goto的基本语法&quot;&gt;&lt;a
        
      
    
    </summary>
    
      <category term="C语言笔记" scheme="https://zhengnianli.github.io/categories/C%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="goto语句" scheme="https://zhengnianli.github.io/tags/goto%E8%AF%AD%E5%8F%A5/"/>
    
  </entry>
  
  <entry>
    <title>STM32串口空闲中断接收不定长数据（DMA方式）</title>
    <link href="https://zhengnianli.github.io/2019/08/18/stm32-chuan-kou-kong-xian-zhong-duan-jie-shou-bu-ding-chang-shu-ju-dma-fang-shi/"/>
    <id>https://zhengnianli.github.io/2019/08/18/stm32-chuan-kou-kong-xian-zhong-duan-jie-shou-bu-ding-chang-shu-ju-dma-fang-shi/</id>
    <published>2019-08-18T00:22:15.000Z</published>
    <updated>2019-08-25T03:32:35.112Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在使用STM32的串口接收数据的时候，我们常常会使用接收中断的方式来接收数据，常用的是&lt;code&gt;RXNE&lt;/code&gt;。这里分享另一种接收数据的方式——&lt;code&gt;IDLE&lt;/code&gt;中断（PS：本文的例子运行在&lt;code&gt;STM32F103ZET6&lt;/code&gt;上）。
        
      
    
    </summary>
    
      <category term="嵌入式" scheme="https://zhengnianli.github.io/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
      <category term="STM32" scheme="https://zhengnianli.github.io/tags/STM32/"/>
    
      <category term="空闲中断" scheme="https://zhengnianli.github.io/tags/%E7%A9%BA%E9%97%B2%E4%B8%AD%E6%96%AD/"/>
    
      <category term="DMA" scheme="https://zhengnianli.github.io/tags/DMA/"/>
    
  </entry>
  
</feed>
